private package MAT.Expressions.Parser_Shift_Reduce is

   type Small_Integer is range -32_000 .. 32_000;

   type Shift_Reduce_Entry is record
      T   : Small_Integer;
      Act : Small_Integer;
   end record;
   pragma Pack (Shift_Reduce_Entry);

   type Row is new Integer range -1 .. Integer'Last;

   --  pragma suppress(index_check);

   type Shift_Reduce_Array is array (Row range <>) of Shift_Reduce_Entry;

   Shift_Reduce_Matrix : constant Shift_Reduce_Array :=
      ((-1, -1) --  Dummy Entry

      --  State  0
      , (2, 25), (3, 23), (4, 24), (8, 5), (9, 4), (10, 3), (13, 10)
      , (14, 13), (15, 6), (22, 9), (24, 7), (25, 8), (28, 17), (29, 19)
      , (30, 18), (31, 20), (32, 21), (33, 11), (35, 14), (36, 16), (43, 12)
      , (46, 2), (-1, -3000)
      --  State  1
      , (11, 27), (12, 28), (-1, -1)
      --  State  2
      , (2, 25), (3, 23), (4, 24), (8, 5), (9, 4), (10, 3), (13, 10)
      , (14, 13), (15, 6), (22, 9), (24, 7), (25, 8), (28, 17), (29, 19)
      , (30, 18), (31, 20), (32, 21), (33, 11), (35, 14), (36, 16), (43, 12)
      , (46, 2), (-1, -3000)
      --  State  3
      , (2, 25), (3, 23), (4, 24), (8, 5), (9, 4), (10, 3), (13, 10)
      , (14, 13), (15, 6), (22, 9), (24, 7), (25, 8), (28, 17), (29, 19)
      , (30, 18), (31, 20), (32, 21), (33, 11), (35, 14), (36, 16), (43, 12)
      , (46, 2), (-1, -3000)
      --  State  4
      , (26, 31), (-1, -43)
      --  State  5
      , (26, 31), (-1, -43)
      --  State  6
      , (3, 35), (36, 34), (-1, -3000)
      --  State  7
      , (3, 35), (36, 34), (-1, -3000)
      --  State  8
      , (3, 35), (36, 34), (-1, -3000)
      --  State  9
      , (2, 25), (4, 24), (-1, -3000)
      --  State  10
      , (37, 40), (38, 41), (39, 42), (40, 43), (41, 45), (42, 44), (-1, -3000)
      --  State  11
      , (37, 40), (38, 41), (39, 42), (40, 43), (41, 45), (42, 44), (-1, -3000)
      --  State  12
      , (3, 23), (-1, -3000)
      --  State  13
      , (37, 40), (38, 41), (39, 42), (40, 43), (41, 45), (42, 44), (-1, -3000)
      --  State  14
      , (37, 40), (38, 41), (39, 42), (40, 43), (41, 45), (42, 44), (-1, -3000)
      --  State  15
      , (34, 51), (-1, -3000)
      --  State  16
      , (37, 40), (38, 41), (39, 42), (40, 43), (41, 45), (42, 44), (-1, -3000)
      --  State  17
      , (-1, -20)
      --  State  18
      , (-1, -21)
      --  State  19
      , (-1, -22)
      --  State  20
      , (-1, -23)
      --  State  21
      , (-1, -24)
      --  State  22
      , (-1, -25)
      --  State  23
      , (-1, -40)
      --  State  24
      , (-1, -33)
      --  State  25
      , (-1, -34)
      --  State  26
      , (0, -3001), (-1, -3000)
      --  State  27
      , (2, 25), (3, 23), (4, 24), (8, 5), (9, 4), (10, 3), (13, 10)
      , (14, 13), (15, 6), (22, 9), (24, 7), (25, 8), (28, 17), (29, 19)
      , (30, 18), (31, 20), (32, 21), (33, 11), (35, 14), (36, 16), (43, 12)
      , (46, 2), (-1, -3000)
      --  State  28
      , (2, 25), (3, 23), (4, 24), (8, 5), (9, 4), (10, 3), (13, 10)
      , (14, 13), (15, 6), (22, 9), (24, 7), (25, 8), (28, 17), (29, 19)
      , (30, 18), (31, 20), (32, 21), (33, 11), (35, 14), (36, 16), (43, 12)
      , (46, 2), (-1, -3000)
      --  State  29
      , (11, 27), (12, 28), (47, 56), (-1, -3000)
      --  State  30
      , (-1, -3)
      --  State  31
      , (-1, -44)
      --  State  32
      , (2, 25), (4, 24), (-1, -3000)
      --  State  33
      , (2, 25), (3, 23), (4, 24), (-1, -3000)
      --  State  34
      , (-1, -41)
      --  State  35
      , (-1, -42)
      --  State  36
      , (18, 60), (-1, -3000)
      --  State  37
      , (-1, -10)
      --  State  38
      , (-1, -11)
      --  State  39
      , (-1, -12)
      --  State  40
      , (3, 23), (-1, -3000)
      --  State  41
      , (3, 23), (-1, -3000)
      --  State  42
      , (3, 23), (-1, -3000)
      --  State  43
      , (3, 23), (-1, -3000)
      --  State  44
      , (3, 23), (-1, -3000)
      --  State  45
      , (3, 23), (-1, -3000)
      --  State  46
      , (-1, -13)
      --  State  47
      , (-1, -14)
      --  State  48
      , (-1, -15)
      --  State  49
      , (-1, -16)
      --  State  50
      , (-1, -17)
      --  State  51
      , (3, 23), (-1, -3000)
      --  State  52
      , (-1, -19)
      --  State  53
      , (-1, -3000)
      --  State  54
      , (12, 28), (-1, -4)
      --  State  55
      , (-1, -5)
      --  State  56
      , (-1, -2)
      --  State  57
      , (-1, -6)
      --  State  58
      , (-1, -7)
      --  State  59
      , (-1, -8)
      --  State  60
      , (3, 35), (36, 34), (-1, -3000)
      --  State  61
      , (-1, -26)
      --  State  62
      , (-1, -27)
      --  State  63
      , (-1, -28)
      --  State  64
      , (-1, -29)
      --  State  65
      , (34, 69), (-1, -31)
      --  State  66
      , (-1, -32)
      --  State  67
      , (-1, -18)
      --  State  68
      , (-1, -9)
      --  State  69
      , (3, 23), (-1, -3000)
      --  State  70
      , (-1, -30)
      );

   --  The offset vector
   Shift_Reduce_Offset : constant array (0 .. 70) of Row :=
      (0,
       23, 26, 49, 72, 74, 76, 79, 82, 85, 88,
       95, 102, 104, 111, 118, 120, 127, 128, 129, 130,
       131, 132, 133, 134, 135, 136, 138, 161, 184, 188,
       189, 190, 193, 197, 198, 199, 201, 202, 203, 204,
       206, 208, 210, 212, 214, 216, 217, 218, 219, 220,
       221, 223, 224, 225, 227, 228, 229, 230, 231, 232,
       235, 236, 237, 238, 239, 241, 242, 243, 244, 246);

end MAT.Expressions.Parser_Shift_Reduce;
