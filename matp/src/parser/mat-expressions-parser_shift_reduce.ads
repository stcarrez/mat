pragma Style_Checks (Off);
package Mat.Expressions.Parser_Shift_Reduce is

    type Small_Integer is range -32_000 .. 32_000;

    type Shift_Reduce_Entry is record
        T   : Small_Integer;
        Act : Small_Integer;
    end record;
    pragma Pack(Shift_Reduce_Entry);

    subtype Row is Integer range -1 .. Integer'Last;

  --pragma suppress(index_check);

    type Shift_Reduce_Array is array (Row  range <>) of Shift_Reduce_Entry;

    Shift_Reduce_Matrix : constant Shift_Reduce_Array :=
        ( (-1,-1) -- Dummy Entry

-- State  0
,( 2, 25),( 3, 23),( 4, 24),( 8, 5),( 9, 4),( 10, 3),( 13, 10),( 14, 13),( 15, 6),( 22, 9),( 24, 7),( 25, 8),( 28, 17)
,( 29, 19),( 30, 18),( 31, 20),( 32, 21),( 33, 11),( 35, 14),( 36, 16),( 43, 12),( 46, 2),(-1,-3000)
-- State  1
,( 11, 27),( 12, 28),(-1,-1)
-- State  2
,( 2, 25),( 3, 23),( 4, 24),( 8, 5),( 9, 4),( 10, 3),( 13, 10),( 14, 13),( 15, 6),( 22, 9),( 24, 7),( 25, 8),( 28, 17)
,( 29, 19),( 30, 18),( 31, 20),( 32, 21),( 33, 11),( 35, 14),( 36, 16),( 43, 12),( 46, 2),(-1,-3000)
-- State  3
,( 2, 25),( 3, 23),( 4, 24),( 8, 5),( 9, 4),( 10, 3),( 13, 10),( 14, 13),( 15, 6),( 22, 9),( 24, 7),( 25, 8),( 28, 17)
,( 29, 19),( 30, 18),( 31, 20),( 32, 21),( 33, 11),( 35, 14),( 36, 16),( 43, 12),( 46, 2),(-1,-3000)
-- State  4
,( 26, 31),(-1,-38)
-- State  5
,( 26, 31),(-1,-38)
-- State  6
,( 2, 25),( 4, 24),(-1,-3000)
-- State  7
,( 2, 25),( 4, 24),(-1,-3000)
-- State  8
,( 2, 25),( 4, 24),(-1,-3000)
-- State  9
,( 2, 25),( 4, 24),(-1,-3000)
-- State  10
,( 37, 39),( 38, 40),( 39, 41),( 40, 42),( 41, 44),( 42, 43),(-1,-3000)
-- State  11
,( 37, 39),( 38, 40),( 39, 41),( 40, 42),( 41, 44),( 42, 43),(-1,-3000)
-- State  12
,( 3, 23),(-1,-3000)
-- State  13
,( 37, 39),( 38, 40),( 39, 41),( 40, 42),( 41, 44),( 42, 43),(-1,-3000)
-- State  14
,( 37, 39),( 38, 40),( 39, 41),( 40, 42),( 41, 44),( 42, 43),(-1,-3000)
-- State  15
,( 34, 50),(-1,-3000)
-- State  16
,( 37, 39),( 38, 40),( 39, 41),( 40, 42),( 41, 44),( 42, 43),(-1,-3000)
-- State  17
,(-1,-19)
-- State  18
,(-1,-20)
-- State  19
,(-1,-21)
-- State  20
,(-1,-22)
-- State  21
,(-1,-23)
-- State  22
,(-1,-24)
-- State  23
,(-1,-36)
-- State  24
,(-1,-32)
-- State  25
,(-1,-33)
-- State  26
,( 0,-3001),(-1,-3000)
-- State  27
,( 2, 25),( 3, 23),( 4, 24),( 8, 5),( 9, 4),( 10, 3),( 13, 10),( 14, 13),( 15, 6),( 22, 9),( 24, 7),( 25, 8),( 28, 17)
,( 29, 19),( 30, 18),( 31, 20),( 32, 21),( 33, 11),( 35, 14),( 36, 16),( 43, 12),( 46, 2),(-1,-3000)
-- State  28
,( 2, 25),( 3, 23),( 4, 24),( 8, 5),( 9, 4),( 10, 3),( 13, 10),( 14, 13),( 15, 6),( 22, 9),( 24, 7),( 25, 8),( 28, 17)
,( 29, 19),( 30, 18),( 31, 20),( 32, 21),( 33, 11),( 35, 14),( 36, 16),( 43, 12),( 46, 2),(-1,-3000)
-- State  29
,( 11, 27),( 12, 28),( 47, 55),(-1,-3000)
-- State  30
,(-1,-3)
-- State  31
,(-1,-39)
-- State  32
,( 2, 25),( 4, 24),(-1,-3000)
-- State  33
,( 2, 25),( 4, 24),(-1,-3000)
-- State  34
,(-1,-37)
-- State  35
,( 18, 58),(-1,-3000)
-- State  36
,(-1,-9)
-- State  37
,(-1,-10)
-- State  38
,(-1,-11)
-- State  39
,( 3, 23),(-1,-3000)
-- State  40
,( 3, 23),(-1,-3000)
-- State  41
,( 3, 23),(-1,-3000)
-- State  42
,( 3, 23),(-1,-3000)
-- State  43
,( 3, 23),(-1,-3000)
-- State  44
,( 3, 23),(-1,-3000)
-- State  45
,(-1,-12)
-- State  46
,(-1,-13)
-- State  47
,(-1,-14)
-- State  48
,(-1,-15)
-- State  49
,(-1,-16)
-- State  50
,( 3, 23),(-1,-3000)
-- State  51
,(-1,-18)
-- State  52
,(-1,-3000)
-- State  53
,( 12, 28),(-1,-4)
-- State  54
,(-1,-5)
-- State  55
,(-1,-2)
-- State  56
,(-1,-6)
-- State  57
,(-1,-7)
-- State  58
,( 2, 25),( 4, 24),(-1,-3000)
-- State  59
,(-1,-25)
-- State  60
,(-1,-26)
-- State  61
,(-1,-27)
-- State  62
,(-1,-28)
-- State  63
,( 34, 67),(-1,-30)
-- State  64
,(-1,-31)
-- State  65
,(-1,-17)
-- State  66
,(-1,-8)
-- State  67
,( 3, 23),(-1,-3000)
-- State  68
,(-1,-29)
);
--  The offset vector
SHIFT_REDUCE_OFFSET : array (0.. 68) of Integer :=
( 0,
 23, 26, 49, 72, 74, 76, 79, 82, 85, 88, 95, 102, 104, 111, 118, 120,
 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 161, 184, 188, 189, 190,
 193, 196, 197, 199, 200, 201, 202, 204, 206, 208, 210, 212, 214, 215, 216, 217,
 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 238,
 239, 240, 241, 243);
end Mat.Expressions.Parser_Shift_Reduce;
